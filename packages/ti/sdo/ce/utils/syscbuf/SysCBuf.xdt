%%{
/*
 *  Copyright 2013 by Texas Instruments Incorporated.
 *
 */

%%}
%%{
/*
 * Copyright (c) 2013 Texas Instruments Incorporated - http://www.ti.com
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of Texas Instruments Incorporated nor the names of
 *   its contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
%%}
%var SysCBuf = xdc.module("ti.sdo.ce.utils.syscbuf.SysCBuf");
    %if (SysCBuf.outputFxn == null) {

#include <stdio.h>

/*
 *  ======== SysCBuf_output__I ========
 *  HOSTWrite only writes a max of N chars at a time. The amount it writes
 *  is returned. This function loops until the entire buffer is written.
 *  Being a static function allows it to conditionally compile out.
 */
Void ti_sdo_ce_utils_syscbuf_SysCBuf_output__I(Char *buf, UInt size)
{
    fwrite(buf, 1, size, stdout);
}
%}
%else {
/*
 *  ======== SysCBuf_output__I ========
 */
Void ti_sdo_ce_utils_syscbuf_SysCBuf_output__I(Char *buf, UInt size)
{
%    if (SysCBuf.outputFxn != null) {
%        var cname = SysCBuf.outputFxn.$name;
%        cname = cname.replace(/\./g,'_');
         `cname`(buf, size);
%    }
%    else {
    /*  SysCBuf.bufSize == 0, so this function does not need to do anything */
%    }
}
%} /* outputFxn != null */
%%{
/*
 * @(#) ti.sdo.ce.utils.syscbuf; 1, 0, 0,3; 6-13-2013 00:19:47; /db/atree/library/trees/ce/ce-w08/src/ xlibrary

 */

%%}
